# Rust環境でのクロスビルドを行うGithub Actionsの設定ファイル

name: crossbuild
# 手動で実行するための設定
on:
  push:
    branches:
      - release

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: "Test scenario tags"
        required: false
        type: boolean
      environment:
        description: "Environment to run tests against"
        type: environment
        required: false

# クロスビルド用の設定
# ubuntu windows macosの3つの環境でビルドを行う

jobs:
  build:
    name: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: example-linux
            asset_name: example-x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: example-windows
            asset_name: example-x86_64-pc-windows-msvc.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: example-macos
            asset_name: example-x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      # リポジトリの内容にアクセスできるようにする
      - uses: actions/checkout@v2
      # Rustの環境を構築する
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # cargo-releaseをインストールする
      - name: install cargo-release
        run: cargo install cargo-release
      # ビルドを行う
      - name: build
        run: cargo build --release --target ${{ matrix.target }} --all-features --verbose
      
      - name: Create Release Draft
        id: create_release
        uses: softprops/action-gh-release@v1

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ matrix.artifact_name }}
          tag_name: ${{ matrix.artifact_name }}
          # tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          # releaseName: "App v__VERSION__"
          # releaseBody: "See the assets to download this version and install."
          generate_release_notes: true
          # releaseDraft: true
          # prerelease: false
      # - name: upload
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     # upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
      #     asset_name: ${{ matrix.asset_name }}
      #     asset_content_type: application/octet-stream
